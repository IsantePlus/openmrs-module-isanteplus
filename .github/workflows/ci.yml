# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  release:
    types: [ created ]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 8.0.232
      - name: Set up Maven
        uses: stCarolas/setup-maven@v4
        with:
          maven-version: 3.6.3
      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - uses: s4u/maven-settings-action@v2.2.0
        with:
          servers: |
            [{
                "id": "github-packages",
                "username": "${{ secrets.RELEASE_USERNAME }}",
                "password": "${{ secrets.RELEASE_TOKEN }}"
            }]
          properties: |
            [
              { "maven.wagon.http.ssl.insecure": "true" },
              { "maven.wagon.http.ssl.allowall": "true" },
              { "maven.wagon.http.ssl.ignore.validity.dates": "true"}
            ]
          githubServer: false
      - name: Build with Maven
        run: mvn -P 'github-packages' install
      - name: Publish package
        run: mvn -P github-packages -DskipTests -Dfindbugs.skip=true -Dpmd.skip=true -Dcpd.skip=true -B deploy
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
        if: github.event_name == 'release' && github.event.action == 'created'
